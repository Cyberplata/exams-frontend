import axios from 'axios'
import React, {useEffect, useState} from 'react'
import ReactDOM from 'react-dom/client';


// Types
type StreetType = {
    suite: string
    city: string
    zipcode: string
    geo: string
    lat: string
    lng: string
}

type CompanyNameType = {
    name: string,
    catchPhrase: string,
    bs: string
}

type UserType = {
    id: string
    name: string
    username: string
    email: string
    address: StreetType
    phone: string
    website: string
    company: CompanyNameType

}

type PostType = {
    title: string
    body: string
    userId: number
}

// Api
const instance = axios.create({baseURL: 'https://jsonplaceholder.typicode.com/'})

const usersAPI = {
    getUsers() {
        return instance.get<UserType[]>('users')
    },
    createPosts(payload: {title: string, body: string, userId: number}) {
        const {title, body, userId} = payload
        return instance.post<PostType>('posts', {title, body, userId})
    },
}


// App
export const App = () => {

    const [users, setUsers] = useState<UserType[]>([])
    const [posts, setPosts] = useState<PostType[]>([]);

    useEffect(() => {
        usersAPI.getUsers()
            .then((res) => {
                console.log(res.data)
                setUsers(res.data)
            })
    }, [])

    const createPostHandler = (title: string, body: string, userId: number) => {
        usersAPI.createPosts({title, body, userId})
            .then((res) => {
                console.log(res.data)
                const newPost = res.data
                setPosts([...posts, newPost])
        }).catch(err => {
            console.log("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ—Å—Ç–∞:", err)
        })
    }

    return (
        <>
            <h1>üìù –°–ø–∏—Å–æ–∫ —é–∑–µ—Ä–æ–≤</h1>
            {
                users.map(c => {
                    return <div key={c.id}><b>User</b>: {c.name} <b>City</b>: {c.address.city} </div>
                })
            }
            <h1>–°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç</h1>
            <button onClick={() => createPostHandler('Test', 'This is a test post', 1)}>–°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç</button>

            {posts.length > 0 && (
                <div>
                    <h2>–°–æ–∑–¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã —Å userId === 1:</h2>
                    {posts.filter(p => p.userId === 1).map((p) => (
                        <div key={p.userId} style={{marginBottom: '10px'}}>
                            <div><b>–ó–∞–≥–æ–ª–æ–≤–æ–∫:</b> {p.title}</div>
                            <div><b>–¢–µ–ª–æ:</b> {p.body}</div>
                            <div><b>UserID:</b> {p.userId}</div>
                        </div>
                    ))}
                </div>
            )}
        </>
    )
}

const root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement);
root.render(<App/>)

// üìú –û–ø–∏—Å–∞–Ω–∏–µ:
//    –ó–∞–¥–∞–Ω–∏—è –¥–ª—è –ø—Ä–∞–∫—Ç–∏–∫–∏
// 1. GET-–∑–∞–ø—Ä–æ—Å
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å https://jsonplaceholder.typicode.com/users, –æ—Ç–æ–±—Ä–∞–∑–∏ –∏—Ö –∏–º–µ–Ω–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ.
//
//  2. POST-–∑–∞–ø—Ä–æ—Å
// –û—Ç–ø—Ä–∞–≤—å –Ω–æ–≤—ã–π –ø–æ—Å—Ç –Ω–∞ https://jsonplaceholder.typicode.com/posts —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ {title: 'Test', body: 'This is a test post', userId: 1} –∏ –æ—Ç–æ–±—Ä–∞–∑–∏ –µ–≥–æ ID –∏ Title.
//
//  3. PUT-–∑–∞–ø—Ä–æ—Å
// –û–±–Ω–æ–≤–∏ –ø–æ—Å—Ç —Å ID 1 –Ω–∞ https://jsonplaceholder.typicode.com/posts/1, –ø–µ—Ä–µ–¥–∞–≤ –Ω–æ–≤–æ–µ title –∏ body.
//
//  4. DELETE-–∑–∞–ø—Ä–æ—Å
// –£–¥–∞–ª–∏ –ø–æ—Å—Ç —Å ID 1 —Å –ø–æ–º–æ—â—å—é https://jsonplaceholder.typicode.com/posts/1 –∏ –ø—Ä–æ–≤–µ—Ä—å —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞.
//
//  5. –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
// –î–æ–±–∞–≤—å –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫ (catch) –¥–ª—è –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–π —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ.
//
//  6. –ü—Ä–æ–≥—Ä–µ—Å—Å-–∑–∞–≥—Ä—É–∑–∫–∞
// –î–æ–±–∞–≤—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ (loading), –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç "–ó–∞–≥—Ä—É–∑–∫–∞..." –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞.

